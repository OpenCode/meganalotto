' Gambas class file

'#################################################
' Software sotto licenza GPL v3 o superiore
' Software under GPL v3 o more licence
' Francesco "Ceskho OpenCode" Apruzzese
' per info o segnalazioni scrivere a :
' cescoap@gmail.com
'#################################################

iIndex AS NEW Integer[]

PUBLIC SUB btAdd_Click()

  FMoneyManagerAdd.ShowDialog()

END

PUBLIC SUB bRefresh_Click()

  '-- graph data
  DIM graf AS NEW linegraf
  DIM datiused, datiwin, datitot AS NEW Float[]
  DIM gridused, gridwin, gridtor AS Float
  DIM dates AS NEW String[]
  '-- database data
  DIM $hConn AS NEW Connection
  DIM hres AS Result
  DIM sql, $data AS String
  DIM i AS Integer
  DIM chart AS Picture

  IF tbUsed.Value = FALSE AND tbWin.Value = FALSE AND tbEarn.Value = FALSE THEN 
    pbUsed.Visible = FALSE
  ELSE 
    pbUsed.Visible = TRUE
  END IF

  GridView1.Clear()

  btExportChart.Enabled = TRUE
  pbUsed.Visible = TRUE

  IF Slider1.Value = 1 THEN 
    ScrollView1.ScrollBar = Scroll.None
  ELSE
    ScrollView1.ScrollBar = Scroll.Both
  END IF

  '-- open the connection
  WITH $hConn
    .Type = Management.DatabaseType
    .Host = Management.DatabasePath
  END WITH
  $hConn.Name = Management.DatabaseName
  $hConn.Open

  '-- set and use query
  sql = "SELECT * FROM money WHERE data BETWEEN " & CInt(Replace(Str(DateChooser1.Value), "/", "")) & " AND " & CInt(Replace(Str(DateChooser2.Value), "/", "")) & " ORDER BY data"
  ' FUNZIONA! sql = "SELECT * FROM money WHERE data LIKE " & CInt(Replace(Str(DateChooser1.Value), "/", ""))
  hres = $hconn.Exec(sql)

  '-- fill gridview with extracts data
  IF hres.Available = TRUE THEN
    GridView1.Columns.Count = 5
    GridView1.Rows.Count = hres.Count + 2
    ResizeColums()
    i = 0
    FOR EACH hres
      $data = Str(hres!data)
      $data = Left($data, 2) & "/" & Right(Left($data, 4), 2) & "/" & Right($data, 2)
      GridView1[i, 0].Text = $data
      GridView1[i, 1].Text = hres!used & Management.$value
      GridView1[i, 2].Text = hres!win & Management.$value
      GridView1[i, 3].Text = hres!lottery
      GridView1[i, 4].Text = hres!note
      '-- filter the result
      IF (cbLotto.Value = FALSE AND hres!lottery = "Lotto") THEN
        GridView1.Rows.Remove(i)
      ELSE IF (cbSuper.Value = FALSE AND hres!lottery = "Superenalotto") THEN
        GridView1.Rows.Remove(i)
      ELSE IF (cb10.Value = FALSE AND hres!lottery = "10&Lotto") THEN
        GridView1.Rows.Remove(i)
      ELSE IF (cbWin.Value = FALSE AND hres!lottery = "Win4Life") THEN
        GridView1.Rows.Remove(i)
      ELSE 
        iIndex.Add(hres!indice)
        IF tbUsed.Value THEN datiused.Add(CFloat(Replace(hres!used, ",", ".")))
        IF tbWin.Value THEN datiwin.Add(CFloat(Replace(hres!win, ",", ".")))
        IF tbEarn.Value THEN datitot.Add(CFloat(Replace(hres!win, ",", ".")) - CFloat(Replace(hres!used, ",", ".")))
        IF tbDate.Value THEN dates.Add($data)
        INC i
      END IF
    NEXT
    
      '-- fill last row for total calculation
    GridView1[GridView1.Rows.Count - 1, 0].Text = ("TOTALE")
    FOR i = 0 TO datiused.Count - 1
      gridused += datiused[i]
      gridwin += datiwin[i]
      gridtor += datitot[i]
    NEXT 
    GridView1[GridView1.Rows.Count - 1, 1].Text = Str(gridused) & Management.$Value
    GridView1[GridView1.Rows.Count - 1, 2].Text = Str(gridwin) & Management.$Value
    GridView1[GridView1.Rows.Count - 1, 4].Text = ("Vincita effettiva") & " " & Str(gridtor) & Management.$Value
    IF Left(Str(gridtor)) = "-" THEN 
      GridView1[GridView1.Rows.Count - 1, 4].BackColor = Color.Red
      GridView1[GridView1.Rows.Count - 1, 4].Foreground = Color.white
    ELSE 
      GridView1[GridView1.Rows.Count - 1, 4].BackColor = Color.Green
      GridView1[GridView1.Rows.Count - 1, 4].Foreground = Color.Black
    END IF
    
  ELSE
    GridView1.Columns.Count = 1
    GridView1.Rows.Count = 1
    GridView1[0, 0].Text = ("Nessun dato trovato!")
    GridView1[0, 0].Alignment = Align.Center
  END IF

  IF tbUsed.Value THEN graf.put(datiused, Color.Red, ("Importo giocato"))
  IF tbWin.Value THEN graf.put(datiwin, Color.Green, ("Importo vinto"))
  IF tbEarn.Value THEN graf.put(datitot, Color.DarkCyan, ("Guadagno"))
  
  IF cbGraph.Index = 0 THEN
    IF tbDate.Value THEN 
      chart = graf.WRITE("", ScrollView1.w * Slider1.Value, ScrollView1.h * Slider1.Value, Color.white, FALSE, dates, FALSE)
    ELSE 
      chart = graf.WRITE("", ScrollView1.w * Slider1.Value, ScrollView1.h * Slider1.Value, Color.white, FALSE,,, FALSE)
    END IF
  ELSE IF cbGraph.Index = 1 THEN 
    IF tbDate.Value THEN 
      chart = graf.WriteBar("", ScrollView1.w * Slider1.Value, ScrollView1.h * Slider1.Value, Color.white, FALSE, dates, FALSE)
    ELSE 
      chart = graf.WriteBar("", ScrollView1.w * Slider1.Value, ScrollView1.h * Slider1.Value, Color.white, FALSE,,, FALSE)
    END IF
  END IF

  pbUsed.w = chart.W
  pbUsed.h = chart.H
  pbUsed.Picture = chart

END

PUBLIC SUB Form_Open()

  cbGraph.Add(("Grafico a linea"), 0)
  cbGraph.Add(("Grafico a barre"), 1)
  
  Slider1.Value = 1
  
  '-- set scrollview and picturebox interoperativity
  IF Slider1.Value = 1 THEN 
    ScrollView1.ScrollBar = Scroll.None
    pbUsed.x = 0
    pbUsed.W = ScrollView1.W
    pbUsed.y = 0
    pbUsed.h = ScrollView1.h
  END IF

END

PRIVATE SUB ResizeColums()
  
  GridView1.Columns.Count = 5
  GridView1.Columns[0].Text = ("Data")
  GridView1.Columns[0].Width = GridView1.w / 5
  GridView1.Columns[1].Text = ("Importo giocato")
  GridView1.Columns[1].Width = GridView1.w / 5
  GridView1.Columns[2].Text = ("Importo vinto")
  GridView1.Columns[2].Width = GridView1.w / 5
  GridView1.Columns[3].Text = ("Lotteria")
  GridView1.Columns[3].Width = GridView1.w / 5
  GridView1.Columns[4].Text = ("Note")
  GridView1.Columns[4].Width = GridView1.w / 5
  
END


PUBLIC SUB Form_Resize()

  ResizeColums()

END

PUBLIC SUB btExportChart_Click()

  DIM percorso AS String
  
  Dialog.Path = User.Home &/ "chart" & Day(Now) & Hour(Now) & Minute(Now) & Second(Now) & ".png"
  
  IF Dialog.SaveFile() THEN RETURN
  percorso = Dialog.Path

  ' IF File.Ext(percorso) <> ".png" OR File.Ext(percorso) <> ".jpg" THEN 
  '   Message.Error(("Specificare estensione PNG o JPG"), "Ok")
  '   RETURN 
  ' END IF

  pbUsed.Picture.Save(percorso, 100)

END

PUBLIC SUB Slider1_Change()

  TextBox1.Text = Str(Slider1.Value)

END

PRIVATE SUB PictureZoom()
  
    pbUsed.x = 0
    pbUsed.W = ScrollView1.W * Slider1.Value
    pbUsed.y = 0
    pbUsed.h = ScrollView1.h * Slider1.Value

END


PUBLIC SUB btRemove_Click()

  DIM id AS Integer
  DIM $hConn AS NEW Connection
  DIM hres AS Result
  DIM sql AS String

  '-- open the connection
  WITH $hConn
    .Type = Management.DatabaseType
    .Host = Management.DatabasePath
  END WITH
  $hConn.Name = Management.DatabaseName
  $hConn.Open

  '-- find the index in the array of all the index
  id = iIndex[GridView1.Row]
  PRINT "GR" & GridView1.Row
  PRINT "ID" & Str(id)

  hres = $hConn.edit(Management.DatabaseTableName, "indice=" & Str(id))
  hres.Delete
  $hconn.Commit
  $hConn.Close

  bRefresh_Click()

END
